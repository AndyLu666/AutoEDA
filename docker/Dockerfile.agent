FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY mcp_agent_client.py .
COPY mcp_eda_client_simple.py .
COPY simple_mcp_client.py .
COPY server/ ./server/
COPY scripts/ ./scripts/
COPY config/ ./config/
COPY designs/ ./designs/
COPY libraries/ ./libraries/
COPY exp_v1/ ./exp_v1/

# Create necessary directories
RUN mkdir -p logs deliverables temp

# Create environment file template
RUN echo '# MCP-EDA Agent Configuration\n\
OPENAI_API_KEY=your_openai_api_key_here\n\
OPENAI_API_BASE=https://api.openai.com/v1\n\
OPENAI_MODEL=gpt-4\n\
\n\
# EDA Server Configuration\n\
MCP_SERVER_HOST=eda-servers\n\
SYNTH_SERVER_PORT=13333\n\
UNIFIED_PLACEMENT_SERVER_PORT=13340\n\
CTS_SERVER_PORT=13338\n\
UNIFIED_ROUTE_SAVE_SERVER_PORT=13341\n\
\n\
# Logging Configuration\n\
LOG_ROOT=/app/logs\n\
LOG_LEVEL=info\n\
DEBUG=false\n\
' > .env.template

# Create startup script with health check endpoint
RUN echo '#!/bin/bash\n\
echo "Starting MCP Agent Client..."\n\
echo "Python version: $(python3 --version)"\n\
echo "Working directory: $(pwd)"\n\
echo "Environment variables:"\n\
env | grep -E "(OPENAI|MCP|LOG)" | sort\n\
\n\
# Start the FastAPI application with health endpoint\n\
exec uvicorn mcp_agent_client:app --host 0.0.0.0 --port 8000 --log-level ${LOG_LEVEL:-info}\n\
' > /app/start_agent.sh && chmod +x /app/start_agent.sh

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Start the application
CMD ["/app/start_agent.sh"] 