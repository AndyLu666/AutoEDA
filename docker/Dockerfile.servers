FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    netcat-openbsd \
    procps \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY server/ ./server/
COPY scripts/ ./scripts/
COPY config/ ./config/
COPY designs/ ./designs/
COPY libraries/ ./libraries/
COPY exp_v1/ ./exp_v1/

# Create necessary directories
RUN mkdir -p logs deliverables temp

# Add health check script
COPY docker/health_check.py ./health_check.py

# Create startup script
RUN echo '#!/bin/bash\n\
echo "Starting EDA Servers..."\n\
echo "Python version: $(python3 --version)"\n\
echo "Working directory: $(pwd)"\n\
echo "Available files: $(ls -la server/)"\n\
\n\
# Start all servers in background\n\
echo "Starting Synthesis Server on port 13333"\n\
python3 server/synth_server.py &\n\
SYNTH_PID=$!\n\
\n\
echo "Starting Unified Placement Server on port 13340"\n\
python3 server/unified_placement_server.py &\n\
PLACEMENT_PID=$!\n\
\n\
echo "Starting CTS Server on port 13338"\n\
python3 server/cts_server.py &\n\
CTS_PID=$!\n\
\n\
echo "Starting Unified Route Save Server on port 13341"\n\
python3 server/unified_route_save_server.py &\n\
ROUTE_PID=$!\n\
\n\
echo "All servers started. PIDs: SYNTH=$SYNTH_PID, PLACEMENT=$PLACEMENT_PID, CTS=$CTS_PID, ROUTE=$ROUTE_PID"\n\
\n\
# Wait for all background processes\n\
wait\n\
' > /app/start_servers.sh && chmod +x /app/start_servers.sh

# Expose ports for the 4 unified servers
EXPOSE 13333 13338 13340 13341

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python3 health_check.py || exit 1

# Default command
CMD ["/app/start_servers.sh"] 